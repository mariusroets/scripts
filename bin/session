#!/bin/bash

PREDEFINED_TYPES=("ipp" "powi" "powinew", "themis")
DEV_TYPES=("dpowi" "packagedev" "environments" "mhrchess" "chessutil" "themisdb")

contains() {
    needle=$1
    for t in ${PREDEFINED_TYPES[@]}; do
        if [[ $t == $needle ]]; then
            return 1 # This a predefined raw session
        fi
    done
    for t in ${DEV_TYPES[@]}; do
        if [[ $t == $needle ]]; then
            return 2 # This is a development session
        fi
    done
    return 0 # This is a undefined raw session
}
create_dev_session() {
    name=$1
    DIR=/data/code/$name
    $TM new-session -A -s $name -n $name -d \; \
        send-keys "window dev $name" C-m\;

    $TM attach-session -t $name
}
create_predefined_session() {
    name=$1
    $TM new-session -A -s $name -n $name -d \; \
        send-keys "window $name" C-m\;
    $TM attach-session -t $name
}
create_raw_session() {
    name=$1
    $TM new-session -A -s $name -n $name
}
attach_session() {
    name=$1
    $TM attach-session -t $name
}
session_exists() {
    name=$1
    $TM has-session -t $name 2>/dev/null

    if [ $? != 0 ]; then
        return 0
    fi
    return 1
}
if [[ $# == 0 ]]; then
    echo "session [-s] [-l] [-t raw/dev] [-a <user>] [<session_name>]"
    echo "-s : Create a shared session. Only one allowed"
    echo "-l : List sessions. With -s, list shared sessions. -s must be first then"
    echo "-g : grants access to shared session for user. Run in session on its own"
    echo "-a : attach to given session."
    echo "<session_name> : The name of the session. Not necesasry if for -l and -a."
    exit 0
fi
OPTSTRING="slg:a:"
TM=tmux
DEV=false
RAW=true
TYPE="raw"
while getopts $OPTSTRING opt; do
    case $opt in
        s)
            TM="tmux -S /var/tmux/shared-session"
            ;;
        l)
            $TM ls
            exit 0
            ;;
        a)
            attach_session $OPTARG
            exit 0
            ;;
        g)
            chmod 777 /var/tmux/shared-session
            tmux server-access -a $OPTARG
            exit 0
            ;;
    esac
done
NAME=default
# Get the name that is specified after all the switches
i=1
j=$#
while [[ $i -le $j ]]; do
    if [[ $i == $OPTIND ]]; then
        NAME=$1
        echo "name is $1"
    fi
    i=$((i+1));
    shift 1;
done

contains $NAME
x=$?

session_exists $NAME
exists=$?
if [[ $exists == 1 ]]; then
    attach_session $NAME
    exit 0
fi

case $x in
    2)
        create_dev_session $NAME
        ;;
    1)
        create_predefined_session $NAME
        ;;
    *)
        create_raw_session $NAME
        ;;
esac

