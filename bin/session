#!/bin/bash

if [ "$1" == "detach" ]; then
    tmux detach
    exit 0
elif [ "$1" == "list" ]; then
    tmux list-sessions
    exit 0
elif [ "$1" == "kill" ]; then
    tmux kill-session
    exit 0
fi

if [ $# -ge 1 ]; then
    SESSION_NAME=$1
    if [ $# -eq 2 ]; then
        RUN_PATH="$2"
    else
        RUN_PATH=/data/python/pythonmodules
    fi
else
    SESSION_NAME=default
fi

tmux has-session -t $SESSION_NAME &> /dev/null
if [ $? != 0 ]; then
    if [ "$SESSION_NAME" == "prog" ]; then
        tmux new-session -s $SESSION_NAME -n python -c $RUN_PATH -d
        tmux send-keys -t $SESSION_NAME:python "conda activate development" C-m
        tmux send-keys -t $SESSION_NAME:python "gvim" C-m
    elif [ "$SESSION_NAME" == "web" ]; then
        tmux new-session -s $SESSION_NAME -c /data/python/dpowi -n web -d
        tmux send-keys -t $SESSION_NAME:web "conda activate powi" C-m
        tmux send-keys -t $SESSION_NAME:web "gvim" C-m
        tmux send-keys -t $SESSION_NAME:web "alias run='./manage.py runserver_plus'" C-m
    elif [ "$SESSION_NAME" == "jupyter" ]; then
        tmux new-session -s $SESSION_NAME -c /data/python/projects -n jupyter -d
        tmux send-keys -t $SESSION_NAME:jupyter "conda activate analysis" C-m
        tmux send-keys -t $SESSION_NAME:jupyter "jupyter lab" C-m
    else
        tmux new-session -s $SESSION_NAME -n home -d
        if [ "$SESSION_NAME" == "ipython" ]; then
            tmux send-keys -t $SESSION_NAME:home "conda activate analysis" C-m
            tmux send-keys -t $SESSION_NAME:home "ipython" C-m
        fi
        if [ -n "$TMUX" ]; then
            echo "Session $SESSION_NAME created, but not attached. Detach from this one first"
            exit 1
        fi
    fi
else
    if [ -n "$TMUX" ]; then
        CURRENT_SESSION=`tmux display-message -p '#S'`
        echo "You are attached to session $CURRENT_SESSION. Detach first."
        exit 1
    fi
fi
tmux attach-session -t $SESSION_NAME
